# Project Aorta - Agent Collaboration Map
# Knowledge about effective agent combinations and interaction strategies

version: "1.0"
last_updated: "2024-03-21T15:00:00Z"
sessions_analyzed: 0

# Agent Performance Profiles
agent_profiles:
  SystemAgent:
    role: "orchestrator"
    strengths:
      - "Task decomposition and planning"
      - "Agent coordination and delegation"
      - "Progress monitoring and integration"
      - "Resource allocation and optimization"

    optimal_contexts:
      - "Complex multi-phase projects"
      - "Cross-domain problem solving"
      - "Resource-constrained environments"

    collaboration_preferences:
      communication_style: "structured_delegation"
      feedback_frequency: "milestone_based"
      handoff_method: "detailed_specifications"

    performance_metrics:
      delegation_success_rate: null
      coordination_efficiency: null
      planning_accuracy: null

  VisionaryAgent:
    role: "vision_creator"
    strengths:
      - "Creative problem conceptualization"
      - "Interdisciplinary connection making"
      - "Innovation and novel approach generation"
      - "High-level strategic thinking"

    optimal_contexts:
      - "Novel problem domains"
      - "Complex biomedical challenges"
      - "Quantum computing applications"
      - "Interdisciplinary projects"

    collaboration_preferences:
      communication_style: "exploratory_dialogue"
      feedback_frequency: "continuous_during_creation"
      handoff_method: "comprehensive_vision_document"

    performance_metrics:
      vision_clarity_score: null
      innovation_index: null
      implementability_rating: null

  MathematicianAgent:
    role: "framework_developer"
    strengths:
      - "Mathematical modeling and formalization"
      - "Algorithmic design and optimization"
      - "Theoretical rigor and validation"
      - "Quantitative analysis and proof"

    optimal_contexts:
      - "Problems requiring mathematical precision"
      - "Algorithm development and optimization"
      - "Theoretical validation of approaches"
      - "Performance modeling and analysis"

    collaboration_preferences:
      communication_style: "formal_specification"
      feedback_frequency: "validation_checkpoints"
      handoff_method: "mathematical_framework_document"

    performance_metrics:
      mathematical_rigor_score: null
      implementability_index: null
      optimization_effectiveness: null

  QuantumEngineerAgent:
    role: "implementer"
    strengths:
      - "Quantum algorithm implementation"
      - "Code optimization and debugging"
      - "System integration and testing"
      - "Performance validation and benchmarking"

    optimal_contexts:
      - "Quantum computing implementation"
      - "Algorithm translation to executable code"
      - "Performance optimization challenges"
      - "System integration projects"

    collaboration_preferences:
      communication_style: "technical_specifications"
      feedback_frequency: "iterative_testing_cycles"
      handoff_method: "executable_implementation"

    performance_metrics:
      implementation_success_rate: null
      code_quality_index: null
      performance_optimization_factor: null

# High-Performance Agent Pairs
agent_pairs:
  VisionaryAgent_MathematicianAgent:
    name: "Creative Vision to Mathematical Framework"
    description: "Visionary creates innovative concepts, Mathematician formalizes them"

    synergy_factors:
      - "Vision provides creative constraints for mathematical exploration"
      - "Mathematical rigor validates and refines visionary concepts"
      - "Iterative refinement improves both vision and mathematical model"

    success_patterns: []  # To be populated from successful collaborations

    performance_metrics:
      collaboration_efficiency: null
      output_quality_score: null
      innovation_preservation_rate: null

    optimal_handoff_timing:
      trigger_conditions: []
      handoff_artifacts: []
      success_indicators: []

  MathematicianAgent_QuantumEngineerAgent:
    name: "Mathematical Framework to Implementation"
    description: "Mathematician provides formal specifications, Engineer implements them"

    synergy_factors:
      - "Mathematical precision guides implementation decisions"
      - "Implementation constraints inform mathematical optimization"
      - "Validation cycles improve both theory and practice"

    success_patterns: []

    performance_metrics:
      translation_accuracy: null
      implementation_efficiency: null
      theoretical_validation_rate: null

    optimal_handoff_timing:
      trigger_conditions: []
      handoff_artifacts: []
      success_indicators: []

  SystemAgent_VisionaryAgent:
    name: "Strategic Planning to Creative Vision"
    description: "SystemAgent guides strategic direction, VisionaryAgent develops creative solutions"

    synergy_factors:
      - "Strategic guidance focuses creative exploration"
      - "Creative vision informs strategic planning"
      - "Continuous alignment ensures practical innovation"

    success_patterns: []

    performance_metrics:
      strategic_alignment_score: null
      creative_output_quality: null
      planning_accuracy: null

# Synergistic Triads
agent_triads:
  full_pipeline:
    name: "Complete Project Pipeline"
    agents: ["SystemAgent", "VisionaryAgent", "MathematicianAgent", "QuantumEngineerAgent"]
    description: "Full four-agent collaboration for complex biomedical quantum projects"

    orchestration_patterns:
      primary_orchestrator: "SystemAgent"
      coordination_style: "sequential_with_feedback"

      phase_1:
        lead_agent: "VisionaryAgent"
        supporting_agents: ["SystemAgent"]
        deliverable: "comprehensive_vision_document"

      phase_2:
        lead_agent: "MathematicianAgent"
        supporting_agents: ["SystemAgent", "VisionaryAgent"]
        deliverable: "mathematical_framework"

      phase_3:
        lead_agent: "QuantumEngineerAgent"
        supporting_agents: ["SystemAgent", "MathematicianAgent"]
        deliverable: "quantum_implementation"

    success_indicators: []
    performance_metrics:
      end_to_end_success_rate: null
      total_collaboration_time: null
      output_quality_composite_score: null

  parallel_development:
    name: "Concurrent Framework and Implementation"
    agents: ["SystemAgent", "MathematicianAgent", "QuantumEngineerAgent"]
    description: "Parallel development with SystemAgent coordinating"
    enabled: false  # Enable when parallel patterns are learned

# Complementary Skills Matrix
skill_complementarity:
  creativity_rigor:
    high_creativity: ["VisionaryAgent"]
    high_rigor: ["MathematicianAgent", "QuantumEngineerAgent"]
    balance_point: "VisionaryAgent provides innovative concepts, others provide validation and implementation"

  abstract_concrete:
    abstract_thinking: ["VisionaryAgent", "MathematicianAgent"]
    concrete_implementation: ["QuantumEngineerAgent", "SystemAgent"]
    balance_point: "Abstract concepts are progressively made concrete through collaboration"

  planning_execution:
    strategic_planning: ["SystemAgent", "VisionaryAgent"]
    tactical_execution: ["MathematicianAgent", "QuantumEngineerAgent"]
    balance_point: "Strategic plans are executed through tactical implementation"

# Conflict Resolution Strategies
conflict_resolution:
  vision_vs_feasibility:
    description: "VisionaryAgent creates ambitious vision that seems infeasible"
    mediator: "SystemAgent"
    resolution_approaches:
      - "Iterative refinement with feasibility constraints"
      - "Phased implementation with proof-of-concept first"
      - "Alternative approach exploration"
    success_indicators: []

  mathematical_vs_practical:
    description: "Mathematical model is too complex for practical implementation"
    mediator: "SystemAgent"
    resolution_approaches:
      - "Model simplification with acceptable approximations"
      - "Incremental implementation with complexity progression"
      - "Alternative mathematical formulation"
    success_indicators: []

  resource_vs_scope:
    description: "Project scope exceeds available computational resources"
    mediator: "SystemAgent"
    resolution_approaches:
      - "Scope reduction with priority focus"
      - "Resource optimization and efficiency improvements"
      - "Phased delivery with incremental results"
    success_indicators: []

# Load Balancing Strategies
load_balancing:
  computational_load:
    high_compute_agents: ["MathematicianAgent", "QuantumEngineerAgent"]
    coordination_agents: ["SystemAgent"]
    creative_agents: ["VisionaryAgent"]

    distribution_strategies: []  # To be learned from execution patterns

  knowledge_specialization:
    domain_experts:
      biomedical: ["VisionaryAgent"]
      mathematical: ["MathematicianAgent"]
      quantum_computing: ["QuantumEngineerAgent"]
      systems: ["SystemAgent"]

    cross_training_opportunities: []  # Areas where agents can learn from each other

  communication_overhead:
    high_communication_pairs: []     # Pairs that require frequent interaction
    low_communication_pairs: []      # Pairs that work well independently
    optimization_strategies: []      # Ways to reduce unnecessary communication

# Learning and Adaptation Patterns
adaptation_patterns:
  agent_learning:
    individual_improvement: []       # How each agent improves over time
    collaborative_learning: []       # How agents learn from each other
    cross_session_retention: []     # What knowledge persists between sessions

  collaboration_evolution:
    efficiency_improvements: []      # How collaboration becomes more efficient
    quality_enhancements: []         # How output quality improves over time
    innovation_patterns: []          # How novel solutions emerge from collaboration

# Performance Baselines
baselines:
  minimum_viable_collaboration:
    agent_count: 2
    minimum_interactions: null
    success_threshold: null

  optimal_collaboration:
    agent_count: null
    interaction_patterns: []
    success_indicators: []

  maximum_effective_scale:
    agent_limit: null
    coordination_overhead_threshold: null
    diminishing_returns_point: null